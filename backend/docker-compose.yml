version: '3.8'

services:
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    depends_on:
      - user-service
      - post-service
      - media-service
      - social-service
      - message-service
      - notification-service
      - story-service
      - search-service

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_service
    volumes:
      - ./services/user-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  post-service:
    build:
      context: ./services/post-service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/post_service
    volumes:
      - ./services/post-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  media-service:
    build:
      context: ./services/media-service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/media_service
    volumes:
      - ./services/media-service:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis

  social-service:
    build:
      context: ./services/social-service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/social_service
    volumes:
      - ./services/social-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  message-service:
    build:
      context: ./services/message-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/message_service
    volumes:
      - ./services/message-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/notification_service
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  story-service:
    build:
      context: ./services/story-service
      dockerfile: Dockerfile
    ports:
      - "3007:3007"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/story_service
    volumes:
      - ./services/story-service:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis

  search-service:
    build:
      context: ./services/search-service
      dockerfile: Dockerfile
    ports:
      - "3008:3008"
    environment:
      - NODE_ENV=development
    volumes:
      - ./services/search-service:/app
      - /app/node_modules
    depends_on:
      - elasticsearch
      - redis

  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

volumes:
  postgres_data:
  redis_data:
  elasticsearch_data: